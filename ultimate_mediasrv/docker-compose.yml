---
version: "3.6"

networks:
  external:
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24
  default:
    driver: bridge

services:

# Traefik 2 - Reverse Proxy
# Touch (create empty files) traefik.log and acme/acme.json. Set acme.json permissions to 600.
# touch $USERDIR/docker/traefik2/acme/acme.json
# chmod 600 $USERDIR/docker/traefik2/acme/acme.json
# touch $USERDIR/docker/traefik2/traefik.log
  traefik:
    container_name: traefik
    image: traefik:chevrotin # the chevrotin tag refers to v2.2.x
    restart: unless-stopped
    command: # CLI arguments
      - --global.checkNewVersion=true
      - --global.sendAnonymousUsage=true
      - --entryPoints.http.address=:80
      - --entryPoints.https.address=:443
        # Allow these IPs to set the X-Forwarded-* headers - Cloudflare IPs: https://www.cloudflare.com/ips/
      - --entrypoints.https.forwardedHeaders.trustedIPs=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/12,172.64.0.0/13,131.0.72.0/22
      - --entryPoints.traefik.address=:8080
      - --api=true
#      - --api.insecure=true
#      - --serversTransport.insecureSkipVerify=true
      - --log=true
      - --log.level=DEBUG # (Default: error) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
      - --accessLog=true
      - --accessLog.filePath=/traefik.log
      - --accessLog.bufferingSize=100 # Configuring a buffer of 100 lines
      - --accessLog.filters.statusCodes=400-499
      - --providers.docker=true
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.docker.defaultrule=Host(`{{ index .Labels "com.docker.compose.service" }}.$DOMAINNAME`)
      - --providers.docker.exposedByDefault=false
      - --providers.docker.network=${COMPOSE_PROJECT_NAME}_external
      - --providers.docker.swarmMode=false
      - --providers.file.directory=/rules # Load dynamic configuration from one or more .toml or .yml files in a directory.
#      - --providers.file.filename=/path/to/file # Load dynamic configuration from a file.
      - --providers.file.watch=true # Only works on top level files in the rules folder
#      - --certificatesResolvers.dns-cloudflare.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory # LetsEncrypt Staging Server - uncomment when testing
      - --certificatesResolvers.dns-cloudflare.acme.email=$CLOUDFLARE_EMAIL
      - --certificatesResolvers.dns-cloudflare.acme.storage=/acme.json
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.provider=cloudflare
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.delayBeforeCheck=5 # To delay DNS check and reduce LE hitrate
    networks:
      traefik_internal:
        ipv4_address: 172.16.239.254 # You can specify a static IP
      traefik_external:
        ipv4_address: 172.16.238.254 # You can specify a static IP
    security_opt:
      - no-new-privileges:true
    ports:
      # https://www.reddit.com/r/docker/comments/c1wrep/traefik_reverse_proxy_question_docker_overlay/
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
    volumes:
      - $APP_DIR/traefik/rules:/rules # file provider directory
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $APP_DIR/traefik/acme/acme.json:/acme.json # cert location - you must touch this file and change permissions to 600
      - $APP_DIR/traefik/traefik.log:/traefik.log # for fail2ban - make sure to touch file before starting container
      - $APP_DIR/shared:/shared
    environment:
      - CF_API_EMAIL=$CLOUDFLARE_EMAIL
      - CF_API_KEY=$CLOUDFLARE_API_KEY
    labels:
      - "traefik.enable=true"
      # HTTP-to-HTTPS Redirect
      - "traefik.http.routers.http-catchall.entrypoints=http"
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      # HTTP Routers
      - "traefik.http.routers.traefik-rtr.entrypoints=https"
      - "traefik.http.routers.traefik-rtr.rule=Host(`traefik.$DOMAINNAME`)"
      - "traefik.http.routers.traefik-rtr.tls=true"
      - "traefik.http.routers.traefik-rtr.tls.certresolver=dns-cloudflare"
      - "traefik.http.routers.traefik-rtr.tls.domains[0].main=$DOMAINNAME"
      - "traefik.http.routers.traefik-rtr.tls.domains[0].sans=*.$DOMAINNAME"
#      - "traefik.http.routers.traefik-rtr.tls.domains[1].main=$DOMAIN" # Pulls main cert for second domain
#      - "traefik.http.routers.traefik-rtr.tls.domains[1].sans=*.$DOMAIN" # Pulls wildcard cert for second domain
      ## Services - API
      - "traefik.http.routers.traefik-rtr.service=api@internal"
      ## Middlewares
      - "traefik.http.routers.traefik-rtr.middlewares=chain-oauth@file"

# Google OAuth - Single Sign On using OAuth 2.0
  # https://hub.docker.com/r/thomseddon/traefik-forward-auth
  # https://www.smarthomebeginner.com/google-oauth-with-traefik-docker/
  oauth:
    container_name: oauth
    image: thomseddon/traefik-forward-auth:latest
#    image: thomseddon/traefik-forward-auth:2.1-arm # Use this image with Raspberry Pi
    restart: unless-stopped
    networks:
      - external
    security_opt:
      - no-new-privileges:true
    environment:
      - CLIENT_ID=$GOOGLE_CLIENT_ID
      - CLIENT_SECRET=$GOOGLE_CLIENT_SECRET
      - SECRET=$OAUTH_SECRET
      - COOKIE_DOMAIN=$DOMAINNAME
      - INSECURE_COOKIE=false
      - AUTH_HOST=oauth.$DOMAINNAME
      - URL_PATH=/_oauth
      - WHITELIST=$MY_EMAIL
      - LOG_LEVEL=info
      - LOG_FORMAT=text
      - LIFETIME=2592000 # 30 days
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.oauth-rtr.entrypoints=https"
      - "traefik.http.routers.oauth-rtr.rule=Host(`oauth.$DOMAINNAME`)"
      - "traefik.http.routers.oauth-rtr.tls=true"
      - "traefik.http.routers.oauth-rtr.tls.certresolver=dns-cloudflare"
      ## Middlewares
      - "traefik.http.routers.oauth-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.oauth-rtr.service=oauth-svc"
      - "traefik.http.services.oauth-svc.loadbalancer.server.port=4181"

#  sabnzbd:
#    image: linuxserver/sabnzbd
#    container_name: sabnzbd
#    environment:
#      - PUID=$USER_ID
#      - PGID=$GROUP_ID
#      - TZ=$TIMEZONE
#    volumes:
#      - $APP_DIR/sabnzbd/config:/config
#      - $TMP_DIR/downloads:/downloads
#      - $APP_DIR/sabnzbd/incomplete-downloads:/incomplete-downloads
#    ports:
#      - 8080:8080
##      - 9090:9090
#    restart: unless-stopped
#  nzbget:
#    image: linuxserver/nzbget
#    container_name: nzbget
#    environment:
#      - PUID=$USER_ID
#      - PGID=$GROUP_ID
#      - TZ=$TIMEZONE
#    volumes:
#      - $APP_DIR/nzbget/config:/config
#      - $TMP_DIR/downloads:/downloads
#    ports:
#      - 6789:6789
#    restart: unless-stopped
#    networks:
#      - traefik_internal
#
#  sonarr:
#    image: linuxserver/sonarr
#    container_name: sonarr
#    environment:
#      - PUID=$USER_ID
#      - PGID=$GROUP_ID
#      - TZ=$TIMEZONE
#    volumes:
#      - $APP_DIR/sonarr/config:/config
#      - $MEDIA_DIR/Series:/tv
#      - $TMP_DIR/downloads:/downloads
#    ports:
#      - 8989:8989
#    restart: unless-stopped
#    networks:
#      - traefik_internal
#
#  radarr:
#    image: linuxserver/radarr
#    container_name: radarr
#    environment:
#      - PUID=$USER_ID
#      - PGID=$GROUP_ID
#      - TZ=$TIMEZONE
#    volumes:
#      - $APP_DIR/radarr/config:/config
#      - $MEDIA_DIR/Movies:/movies
#      - $TMP_DIR/downloads:/downloads
#    ports:
#      - 7878:7878
#    restart: unless-stopped
#    networks:
#      - traefik_internal
#
#  lidarr:
#    image: linuxserver/lidarr
#    container_name: lidarr
#    environment:
#      - PUID=$USER_ID
#      - PGID=$GROUP_ID
#      - TZ=$TIMEZONE
#    volumes:
#      - $APP_DIR/lidarr/config:/config
#      - $MEDIA_DIR/Music:/music
#      - $TMP_DIR/downloads:/downloads
#    ports:
#      - 8686:8686
#    restart: unless-stopped
#    networks:
#      - traefik_internal
#
#  bazarr:
#    image: linuxserver/bazarr
#    container_name: bazarr
#    environment:
#      - PUID=$USER_ID
#      - PGID=$GROUP_ID
#      - TZ=$TIMEZONE
#    volumes:
#      - $APP_DIR/bazarr/config:/config
#      - $MEDIA_DIR/Movies:/movies
#      - $MEDIA_DIR/Series:/tv
#    ports:
#      - 6767:6767
#    restart: unless-stopped
#    networks:
#      - traefik_internal
#
#  nzbhydra2:
#    image: hotio/nzbhydra2
#    container_name: nzbhydra2
#    environment:
#      - PUID=$USER_ID
#      - PGID=$GROUP_ID
#      - TZ=$TIMEZONE
#    volumes:
#      - $APP_DIR/nzbhydra2/config:/config
#      - $APP_DIR/jackett/blackhole:/blackhole
#    ports:
#      - 5076:5076
#    restart: unless-stopped
#    networks:
#      - traefik_internal
#
#  jackett:
#    image: linuxserver/jackett
#    container_name: jackett
#    environment:
#      - PUID=$USER_ID
#      - PGID=$GROUP_ID
#      - TZ=$TIMEZONE
#    volumes:
#      - $APP_DIR/jackett/config:/config
#      - $APP_DIR/jackett/blackhole:/blackhole
#    ports:
#      - 9117:9117
#    restart: unless-stopped
#    networks:
#      - traefik_internal
#
##  deluge:
##    image: linuxserver/deluge
##    container_name: deluge
##    network_mode: host
##    environment:
##      - PUID=$USER_ID
##      - PGID=$GROUP_ID
##      - TZ=$TIMEZONE
##    volumes:
##      - $APP_DIR/deluge/config:/config
##      - $APP_DIR/jackett/blackhole:/blackhole
##      - $APP_DIR/deluge/downloads:/downloads
##      - $APP_DIR/deluge/incomplete-downloads:/incomplete-downloads
##    restart: unless-stopped
##    networks:
##      - traefik_internal
#
#  tautulli:
#    image: linuxserver/tautulli
#    container_name: tautulli
#    environment:
#      - PUID=$USER_ID
#      - PGID=$GROUP_ID
#      - TZ=$TIMEZONE
#    volumes:
#      - $APP_DIR/tautulli/config:/config
##      - path to plex logs:/log
#    ports:
#      - 8181:8181
#    restart: unless-stopped
#    networks:
#      - traefik_internal
#
#  airsonic:
#    image: linuxserver/airsonic
#    container_name: airsonic
#    environment:
#      - PUID=$USER_ID
#      - PGID=$GROUP_ID
#      - TZ=$TIMEZONE
#      - JAVA_OPTS=-Dserver.use-forward-headers=true
#    volumes:
#      - $APP_DIR/airsonic/config:/config
#      - $APP_DIR/airsonic/playlists:/playlists
#      - $MEDIA_DIR/Music:/music
#    ports:
#      - 4040:4040
#    restart: unless-stopped
#    networks:
#      - traefik_internal
#
#  mymediaforalexa:
#    image: bizmodeller/mymediaforalexa
#    container_name: mymediaforalexa
#    volumes:
#      - $APP_DIR/mymediaforalexa/data:/datadir
#      - $MEDIA_DIR/Music:/medialibrary
#    ports:
#      - 52050:52050
#      - 52051:52051
#    restart: unless-stopped
#    networks:
#      - traefik_internal
#
